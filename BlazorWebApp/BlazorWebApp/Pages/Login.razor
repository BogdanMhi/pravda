@page "/login"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div class="container">
    <h1>Login</h1>
    <p>Please fill in this form to login.</p>

    <label for="email"><b>Email</b></label>
    <input @bind="user.Email" type="text" placeholder="Email" class="input email" />

    <label for="psw"><b>Password</b></label>
    <input @bind="user.Password" type="password" placeholder="Password" class="input password" />

    <div class="clearfix">
        <button @onclick="LoginTask" type="submit" class="signupbtn">Login</button>
        <button type="submit" class="forgot">Forgot password</button>
    </div>

    <p style="display: @displayStyle">User Created: @showOutput</p>
</div>

@code
{
    public class LoginUser
    {
        public LoginUser()
        {
        }

        public LoginUser(string email, string password)
        {
            this.Email = email;
            this.Password = password;
        }

        public string Email { get; set; }

        public string Password { get; set; }

    }

    public LoginUser user { get; set; } = new LoginUser();
    public string showOutput { get; set; } = "none";
    public string displayStyle { get; set; } = "none";

    public async Task LoginTask()
    {
        var req = new Dictionary<string, dynamic>
        {
            {"email", user.Email},
            {"password", user.Password},
        };

        var res = await Http.PostAsJsonAsync("https://localhost:5001/api/users/authenticate", req);
        var dict = await res.Content.ReadFromJsonAsync<Dictionary<string, dynamic>>();
        @* System.Console.WriteLine(dict["token"]); *@
        await localStorage.SetItemAsync("token", dict["token"]);
        showOutput = res.IsSuccessStatusCode.ToString();
        displayStyle = "block";
    }
}
