@page "/topnews"
@inject HttpClient Http

<div class="topnews">
    @if (Classifieds == null)
    {
        <div>Loading...</div>
    }
    else
    {
        <div class="header-wrapper">
            <h3>Top @Classifieds.Count() news searched.</h3>
        </div>
        @foreach (Classified classified in Classifieds)
        {
            @if (@classified.isClassifiedFake)
            {
                backgroundColor = "rgba(255, 0, 0, 0.1)";
            }
            else
            {
                backgroundColor = "rgba(0, 255, 0, 0.1)";
            }

            <div class="topnews__card" style="background-color: @backgroundColor">
                <h5>@classified.Title</h5>
                <div class="subject-date">
                    <p class="date">@classified.Date</p>
                    <p class="subject">@classified.Subject</p>
                </div>
                <p>@classified.Text</p>
            </div>
        }
    }
</div>

@code {

    public List<Classified> Classifieds = null;
    
    public string backgroundColor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        @* var req = new Dictionary<string, dynamic>
        {
            { "title", classified.Title },
            { "text", classified.Text },
            { "subject", classified.Subject },
            { "date", classified.Date },
        }; *@
    
        var res = await Http.GetFromJsonAsync<List<Classified>>("https://localhost:5005/api/cached_classifications/hotnews");
        Classifieds = res;
    }


}
